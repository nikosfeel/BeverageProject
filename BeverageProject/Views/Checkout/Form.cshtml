@model Entities.Orders.Order
@{
    ViewBag.Title = "Form";
    Layout = "";
}
@using Entities.Items
@*@Html.Partial("~/Views/Checkout/_PayPal.cshtml")*@

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link rel="shortcut icon" href="~/Content/images/wine-glass.png" type="image/png" />
    <link href="~/Content/css/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/OrderForm.css" rel="stylesheet" />
</head>
<body>

    <div class="container-fluid">
        <!--=================== Main Slider Section ===================-->
        <div class="row">
            <div class="col-75">
                <div class="container" style="background: url(/Content/images/banner/parallax.jpg) no-repeat fixed;">
                    <form action="@Url.Action("CreateOrder","CheckOut")" method="post">
                        <div class="row">
                            <div class="col-50">
                                <div class="row pull-right">
                                    <div class="col-25">
                                        <a href="@Url.Action("Index","Home")" style="color:black; font-size:20px;"><i class="fa fa-backward"></i> Back to home</a>
                                    </div>
                                </div>
                                <h3>Billing Address</h3>
                                <label for="fname"><i class="fa fa-user"></i> Full Name</label>
                                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Giannis Dimitriou", id = "fname", name = "fullname",required = true })
                                <label for="email"><i class="fa fa-envelope-o"></i> Email</label>
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "email", name = "email", placeholder = "john@example.com", required = true })
                                <label for="adr"><i class="fa fa-address-card-o"></i> Address</label>
                                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", id = "adr", name = "address", placeholder = "Papadiamanti 15, Monastiraki", required = true })
                                <label for="city"><i class="fa fa-institution"></i> City</label>
                                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control", id = "city", name = "city", placeholder = "Athens", required = true })
                                <label for="zip"><i class="fa fa-map-marker"></i> Zip</label>
                                @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control", id = "zip", name = "postalcode", placeholder = "10001", required = true })
                                <label for="phone"><i class="fa fa-phone"></i> Phone Number</label>
                                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", id = "phone", name = "phone", placeholder = "e.g 6912345678", required = true })
                                
                            </div>
                        </div>
                        <label>
                            <input type="checkbox" checked="checked" name="sameadr"> Shipping address same as billing
                        </label>
                        <div class="row">
                            <div class="col-25">
                                <a href="@Url.Action("PaymentWithPaypal", "Checkout")" class="btn" style="background-color:cornflowerblue">PayPal / Credit Card</a>
                            </div>
                            <div class="col-25">
                                <input type="submit" value="Continue to checkout" class="btn">
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-25">

                @{
                    List<Item> cart = (List<Item>)Session["cart"];
                    var total = cart.Sum(item => item.Product.Price * item.Quantity);

                    double discount = 0.9;

                    if (total > 150)
                    {
                        discount = 0.85;
                        total = total * discount;

                    }
                    else if (total > 100)
                    {
                        discount = 0.88;
                        total = total * discount;
                    }
                    else if (total > 50)
                    {
                        discount = 0.9;
                        total = total * discount;
                    }

                }

                <div class="container" style="background: url(/Content/images/banner/parallax.jpg) no-repeat fixed;">
                    <h4>
                        Your Cart
                        <span class="price" style="color:black">
                            <b>Items: @cart.Count()</b>
                            <i class="fa fa-shopping-cart"></i>
                        </span>
                    </h4>
                    @foreach (Item item in (List<Item>)Session["cart"])
                    {
                        <span><b>@item.Product.Name</b></span> <span class="text-muted pull-right"><b> Price: @item.Product.Price€</b></span>
                        <br />
                        <b class="text-muted">Kind : @item.Product.GetType().Name</b>
                        <a href="@Url.Action("Remove", "Cart", new { id = item.Product.ProductId })" class="remove"><i class="fa fa-trash-o fa-2x pull-right"></i></a>
                        <br />
                        <b class="text-muted">Quantity : @item.Quantity</b>
                        <hr />
                    }
                    <span class="price" style="color:black"><b name="total">Total: @total€</b></span>
                </div>
            </div>
        </div>
    </div>

</body>
</html>

@section scripts{
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation')

                // Loop over them and prevent submission
                Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
            }, false)
        }())
    </script>
}
